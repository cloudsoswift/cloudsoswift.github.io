<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>UDP on 오늘도 개발을 한다.</title>
    <link>https://cloudsoswift.github.io/tags/udp/</link>
    <description>오늘도 개발을 한다. (UDP)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 01 Nov 2024 18:18:16 +0900</lastBuildDate>
    
    <atom:link href="https://cloudsoswift.github.io/tags/udp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Network] TCP와 UDP 알아보기 (w. 흐름 제어, 혼잡 제어, CongWin, HTTP/3)</title>
      <link>https://cloudsoswift.github.io/post/develop/network/tcp-udp/</link>
      <pubDate>Fri, 01 Nov 2024 18:18:16 +0900</pubDate>
      
      <guid>https://cloudsoswift.github.io/post/develop/network/tcp-udp/</guid>
      <description>&lt;h1 id=&#34;서론&#34; &gt;서론
&lt;span&gt;
    &lt;a href=&#34;#%ec%84%9c%eb%a1%a0&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/orm712/CS-712&#34;&gt;CS 스터디&lt;/a&gt;에서 10월 28일 발표한 &lt;a href=&#34;https://github.com/orm712/CS-712/blob/main/03-NETWORK/7_TCP-UDP/Readme.md&#34;&gt;&lt;strong&gt;TCP &amp;amp; UDP&lt;/strong&gt;&lt;/a&gt;에 대해 정리한 문서를 블로그에 공유하고자 한다.&lt;/p&gt;
&lt;h2 id=&#34;tcp와-udp에-대하여&#34; &gt;TCP와 UDP에 대하여
&lt;span&gt;
    &lt;a href=&#34;#tcp%ec%99%80-udp%ec%97%90-%eb%8c%80%ed%95%98%ec%97%ac&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt;와 &lt;code&gt;UDP&lt;/code&gt;는 네트워크 계층 중 &lt;code&gt;전송 계층(transport-layer)&lt;/code&gt;에서 사용되는 프로토콜
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;전송 계층&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;프로세스 간 &lt;code&gt;논리적 통신(logical communication)&lt;/code&gt;이 이뤄지는 계층&lt;/li&gt;
&lt;li&gt;&lt;code&gt;네트워크 계층&lt;/code&gt;의 서비스들에 의존하고, 이들을 강화시키는 계층&lt;/li&gt;
&lt;li&gt;보내려는 메시지를 &lt;code&gt;전송 계층&lt;/code&gt;의 규격에 맞게 분할 후, 해야할 일을 헤더로 부착해 보내는 과정을 거침&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp&#34; &gt;TCP
&lt;span&gt;
    &lt;a href=&#34;#tcp&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h4 id=&#34;요약&#34; &gt;요약
&lt;span&gt;
    &lt;a href=&#34;#%ec%9a%94%ec%95%bd&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;신뢰성&lt;/code&gt;(&lt;code&gt;reliable&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;순서&lt;/code&gt;에 맞게 전송하고자 함(&lt;code&gt;in-order&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;혼잡 제어&lt;/code&gt;, &lt;code&gt;흐름 제어&lt;/code&gt;, &lt;code&gt;연결 설정&lt;/code&gt;과 같은 기능 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;주요-특징&#34; &gt;주요 특징
&lt;span&gt;
    &lt;a href=&#34;#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;1대1 통신&lt;/code&gt;&lt;/strong&gt;(&lt;code&gt;unicast&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;신뢰할 수 있고, 순차적인 바이트스트림&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;메시지 바운더리&lt;/code&gt; 없음 (전송되는 두 &lt;strong&gt;&lt;code&gt;메시지 사이의 구분&lt;/code&gt;&lt;/strong&gt; 이 &lt;strong&gt;없음&lt;/strong&gt;)
&lt;img src=&#34;sequence-number_ACK-number.png&#34; alt=&#34;sequence-number_ACK-number.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;송신 번호&lt;/code&gt;, &lt;code&gt;ACK 번호&lt;/code&gt;를 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;파이프라인&lt;/code&gt; 사용&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;TCP &lt;code&gt;혼잡, 흐름 제어&lt;/code&gt;를 위한 &lt;code&gt;window size&lt;/code&gt;를 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;전이중 데이터&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;동일한 연결 상에서 양방향 통신&lt;/li&gt;
&lt;li&gt;최대 세그먼트 크기(&lt;code&gt;MSS&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;연결지향적 통신&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;데이터 교환 전, &lt;code&gt;핸드셰이킹(제어 메시지 교환)&lt;/code&gt;으로 송신자-수신자 &lt;code&gt;상태 초기화&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;흐름 제어&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;송신자가 수신자를 &lt;code&gt;압도(overwhelm)&lt;/code&gt;하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;rttround-trip-time-왕복-시간&#34; &gt;RTT(Round Trip Time, 왕복 시간)
&lt;span&gt;
    &lt;a href=&#34;#rttround-trip-time-%ec%99%95%eb%b3%b5-%ec%8b%9c%ea%b0%84&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;p&gt;&lt;em&gt;TCP의 효율적인 통신을 위해&lt;/em&gt;, 지정된 시간 내에 &lt;code&gt;ACK 신호&lt;/code&gt;나 &lt;code&gt;세그먼트&lt;/code&gt;를 수신하지 못한 경우, &lt;code&gt;연결 시간 초과(timeout)&lt;/code&gt;로 처리하고 연결을 종료해야 함.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이때, &lt;code&gt;TCP timeout 시간&lt;/code&gt;은 RTT보다 길어야 함
&lt;ul&gt;
&lt;li&gt;하지만, RTT는 편차가 있을 수 있음&lt;/li&gt;
&lt;li&gt;너무 짧게 잡는다면, 재전송이 자주 발생함&lt;/li&gt;
&lt;li&gt;너무 길게 잡는다면, &lt;code&gt;세그먼트 손실&lt;/code&gt;에 대해 느리게 반응하게 됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;이때, &lt;code&gt;RTT의 편차&lt;/code&gt; 등을 어떻게 측정해야 할까?
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SampleRTT&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;세그먼트 전송 후, &lt;code&gt;ACK 수신&lt;/code&gt;까지 측정된 시간 (재전송 무시)&lt;/li&gt;
&lt;li&gt;다만 &lt;code&gt;SampleRTT&lt;/code&gt; 역시 다양할 수 있으므로, 이들의 여러 최근 측정값을 평균내어 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RTT의 기준?&lt;img src=&#34;TCP-RTT.png&#34; alt=&#34;TCP-RTT.png&#34;&gt;
&lt;ul&gt;
&lt;li&gt;만약 ACK 수신 이전, &lt;code&gt;여러 번의 세그먼트 전송&lt;/code&gt;이 발생한 경우 &lt;code&gt;가장 처음 보낸 세그먼트를 기준&lt;/code&gt;으로 함&lt;/li&gt;
&lt;li&gt;만약 &lt;code&gt;동일한 세그먼트가 재전송&lt;/code&gt; 된 경우, &lt;code&gt;RTT 측정에 포함하지 않음&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;처음 보낸 세그먼트에 대한 ACK 인지, 재전송된 세그먼트에 대한 ACK인지 &lt;code&gt;구분할 수 없기 때문&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;신뢰할-수-있는-데이터-전송&#34; &gt;신뢰할 수 있는 데이터 전송
&lt;span&gt;
    &lt;a href=&#34;#%ec%8b%a0%eb%a2%b0%ed%95%a0-%ec%88%98-%ec%9e%88%eb%8a%94-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%a0%84%ec%86%a1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;rdt-transport-to-app.png&#34; alt=&#34;rdt-transport-to-app.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;응용, 전송, 링크 계층에서 &lt;code&gt;신뢰성&lt;/code&gt;은 매우 중요한 개념으로, 각 계층마다 신뢰성 유지를 위해 데이터를 체크
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;신뢰성&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;비트 에러&lt;/code&gt;, &lt;code&gt;패킷 손실&lt;/code&gt; 없이 한 번만 전송하는 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;tcp에서의-rdt&#34; &gt;TCP에서의 RDT
&lt;span&gt;
    &lt;a href=&#34;#tcp%ec%97%90%ec%84%9c%ec%9d%98-rdt&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;TCP는 &lt;code&gt;RDT(Reliable Data Transfer, 신뢰성 있는 데이터 전송) 서비스&lt;/code&gt;를 IP의 신뢰성 없는 서비스 위에 구축함
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;파이프라인화된 세그먼트&lt;/code&gt; (연속으로 전송할 수 있음)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;누적 ACK&lt;/code&gt; (GoBackN과 유사)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;단일 재전송 타이머&lt;/code&gt; (데이터 보낸 시간 != timeout 시간 일 수 있음)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;재전송&lt;/code&gt;은 다음 두 경우 발생
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;timeout 이벤트&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;timeout이 발생한 경우, 이를 일으킨 세그먼트를 재전송&lt;/li&gt;
&lt;li&gt;타이머 재시작&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;중복된 ACK&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;이전에 ACK되지 않은 세그먼트를 ACK하는 경우&lt;/li&gt;
&lt;li&gt;어떤 패킷이 ACK되었다고 알려져있는지 갱신&lt;/li&gt;
&lt;li&gt;ACK되지 않은 세그먼트 아직 있으면 타이머 시작&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;흐름-제어&#34; &gt;흐름 제어
&lt;span&gt;
    &lt;a href=&#34;#%ed%9d%90%eb%a6%84-%ec%a0%9c%ec%96%b4&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;p&gt;&lt;img src=&#34;flow-control.png&#34; alt=&#34;flow-control.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;흐름 제어&lt;/code&gt;: 빠른 발신자가 너무 많이, 너무 빨리 전송해 느린 수신자 버퍼가 넘치지 않도록(압도하지 않도록) 함&lt;/li&gt;
&lt;li&gt;수신자는 TCP 헤더에 &lt;code&gt;윈도우 크기(rwnd)&lt;/code&gt;를 포함시켜, 사용 가능한 버퍼 공간을 명시함 &lt;img src=&#34;rcvBuffer.png&#34; alt=&#34;rcvBuffer.png&#34;&gt;
&lt;ul&gt;
&lt;li&gt;소켓 옵션을 통해 설정된 &lt;code&gt;수신자 버퍼(RcvBuffer)&lt;/code&gt;크기 값으로, 보통 4096 byte가 디폴트&lt;/li&gt;
&lt;li&gt;대부분의 운영체제에서 이 크기를 &lt;code&gt;자동 조정&lt;/code&gt;함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;발신자는 &lt;code&gt;수신자의 윈도우 크기&lt;/code&gt; 만큼만 &lt;code&gt;ACK되지 않은(in-flight) 데이터&lt;/code&gt;를 보낼 수 있음
&lt;ul&gt;
&lt;li&gt;이는 수신자 버퍼가 넘치지 않도록 보장&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;stop-and-wait&#34; &gt;Stop-and-wait
&lt;span&gt;
    &lt;a href=&#34;#stop-and-wait&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;가장 간단한 형태의 흐름 제어 기법&lt;/li&gt;
&lt;li&gt;발신자가 하나의 패킷을 보낸 뒤, 수신자의 응답이 올 때까지 기다림
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ACK&lt;/code&gt; 를 수신하거나, 타임아웃이 발생하면 다시 패킷 전송&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;go-back-n&#34; &gt;Go-back-N
&lt;span&gt;
    &lt;a href=&#34;#go-back-n&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;go-back-n.png&#34; alt=&#34;go-back-n.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;send_base: 보낸 패킷
nextseqnum: 보낼 예정인 패킷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;N개의 &lt;code&gt;ACK되지 않은 패킷&lt;/code&gt;을 파이프라인을 통해 전송&lt;/li&gt;
&lt;li&gt;수신자는 &lt;code&gt;누적 ACK(cumulative ACK)&lt;/code&gt;만 전송&lt;/li&gt;
&lt;li&gt;발신자는 가장 &lt;strong&gt;오래된&lt;/strong&gt; &lt;code&gt;ACK되지 않은 패킷&lt;/code&gt;에 대한 타이머 갖고 있음
&lt;ul&gt;
&lt;li&gt;타임아웃 발생시, &lt;code&gt;모든 ACK되지 않은 패킷들&lt;/code&gt;을 재전송
&lt;ul&gt;
&lt;li&gt;즉, &lt;code&gt;가장 마지막으로 ACK 받은&lt;/code&gt; 시퀀스 번호로 돌아가 재전송&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;selective-repeat&#34; &gt;Selective Repeat
&lt;span&gt;
    &lt;a href=&#34;#selective-repeat&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;selective-repeat.png&#34; alt=&#34;selective-repeat.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N개의 &lt;code&gt;ACK되지 않은 패킷&lt;/code&gt;을 파이프라인을 통해 전송&lt;/li&gt;
&lt;li&gt;수신자는 &lt;code&gt;각각의 패킷에 대한 ACK&lt;/code&gt;를 전송&lt;/li&gt;
&lt;li&gt;발신자는 각 패킷에 대한 타이머를 갖고있음
&lt;ul&gt;
&lt;li&gt;타임아웃 발생시, &lt;code&gt;해당 패킷만&lt;/code&gt; 재전송&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;수신자는 &lt;code&gt;순서를 지켜(in-order)&lt;/code&gt; 상위 계층에 패킷들을 전달하기 위해, &lt;code&gt;버퍼&lt;/code&gt; 사용
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;문제 생긴 패킷&lt;/em&gt; &lt;code&gt;다음의 패킷들&lt;/code&gt;을 버퍼에 저장, 또는 &lt;code&gt;순서에 맞지않는 패킷들&lt;/code&gt; 저장&lt;/li&gt;
&lt;li&gt;이후, 문제 생긴 패킷을 재전송받고, &lt;code&gt;일정 갯수의 패킷&lt;/code&gt;이 모이면 &lt;code&gt;상위 계층으로 전달&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;참고&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://computerscience.unicam.it/marcantoni/reti/applet/SelectiveRepeatProtocol/selRepProt.html&#34;&gt;Selective Repeat Protocol&lt;/a&gt; : Selective Repeat 흐름을 테스트해볼 수 있는 사이트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;혼잡-제어&#34; &gt;혼잡 제어
&lt;span&gt;
    &lt;a href=&#34;#%ed%98%bc%ec%9e%a1-%ec%a0%9c%ec%96%b4&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;발신자가 혼잡함을 인식하는 기준
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;손실 이벤트(loss event)&lt;/code&gt;: &lt;code&gt;타임아웃&lt;/code&gt; 또는 &lt;code&gt;3번&lt;/code&gt;의 &lt;code&gt;중복된 ACK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TCP 발신자는 &lt;code&gt;손실 이벤트&lt;/code&gt; 발생시, 혼잡에 대응하기 위해 &lt;code&gt;혼잡 윈도우(Congestion Window, CongWin)&lt;/code&gt;의 크기를 조절해 대응&lt;/li&gt;
&lt;li&gt;&lt;code&gt;혼잡 제어&lt;/code&gt;를 위해 &lt;code&gt;AIMD&lt;/code&gt;, &lt;code&gt;slow start&lt;/code&gt;, &lt;code&gt;conservative after timeout events&lt;/code&gt; 3가지 메커니즘 존재&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;aimd&#34; &gt;AIMD
&lt;span&gt;
    &lt;a href=&#34;#aimd&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;AIMD.png&#34; alt=&#34;AIMD.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Additive Increase Multiplicative Decrease&lt;/code&gt;의 약어&lt;/li&gt;
&lt;li&gt;&lt;code&gt;혼잡 윈도우&lt;/code&gt;를 &lt;em&gt;혼잡이 감지되지 않을때&lt;/em&gt;는 &lt;code&gt;선형적으로 증가&lt;/code&gt;시키다, &lt;em&gt;혼잡이 감지되면&lt;/em&gt; &lt;code&gt;기하급수적으로 감소&lt;/code&gt;시키는 방식
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;손실이 감지될 때까지&lt;/em&gt;, 매 &lt;code&gt;RTT&lt;/code&gt;마다 &lt;code&gt;cwnd&lt;/code&gt;를 1 MSS씩 증가&lt;/li&gt;
&lt;li&gt;&lt;em&gt;손실이 발생하면&lt;/em&gt;, &lt;code&gt;cwnd&lt;/code&gt;를 절반으로 줄임&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;즉, &lt;code&gt;cwnd&lt;/code&gt;는 인식된 네트워크 혼잡 정도를 나타내는 함수라고 할 수 있음&lt;/li&gt;
&lt;li&gt;TCP 전송 속도 $rate \approx {cwnd \over RTT} bytes/sec$&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;slow-start&#34; &gt;Slow Start
&lt;span&gt;
    &lt;a href=&#34;#slow-start&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;Slow-Start.png&#34; alt=&#34;Slow-Start.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;연결 시작 이후, &lt;code&gt;손실 이벤트&lt;/code&gt; 발생 전까지 속도를 기하급수적으로 증가시키는 방식
&lt;ul&gt;
&lt;li&gt;초기 &lt;code&gt;cwnd&lt;/code&gt; = 1 MSS&lt;/li&gt;
&lt;li&gt;매 RTT마다 &lt;code&gt;cwnd&lt;/code&gt;는 2배씩 증가
&lt;ul&gt;
&lt;li&gt;정확히는 모든 &lt;code&gt;ACK 수신&lt;/code&gt;마다 &lt;code&gt;cwnd&lt;/code&gt;를 2배로 증가시킴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;시작 값이 1이라 &lt;code&gt;Slow Start&lt;/code&gt;라는 이름이 붙었으며, 증가 속도는 빠름&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;conservative-after-timeout-events타임아웃-발생-후-보수적으로&#34; &gt;Conservative after timeout events(타임아웃 발생 후 보수적으로)
&lt;span&gt;
    &lt;a href=&#34;#conservative-after-timeout-events%ed%83%80%ec%9e%84%ec%95%84%ec%9b%83-%eb%b0%9c%ec%83%9d-%ed%9b%84-%eb%b3%b4%ec%88%98%ec%a0%81%ec%9c%bc%eb%a1%9c&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;타임아웃&lt;/code&gt;으로 손실을 인식
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;는 1로 세팅됨&lt;/li&gt;
&lt;li&gt;이후 &lt;code&gt;cwnd&lt;/code&gt;가 기하급수적으로 &lt;code&gt;임계값(threshold)&lt;/code&gt;까지 증가한 뒤, &lt;code&gt;선형적&lt;/code&gt;으로 증가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3개의 중복 ACK&lt;/code&gt;로 손실을 인식 : &lt;code&gt;TCP RENO&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;중복 ACK&lt;/code&gt;는 네트워크가 아직 &lt;code&gt;세그먼트들을 전달할 수 있음&lt;/code&gt;을 나타냄&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;를 &lt;code&gt;절반&lt;/code&gt;으로 줄인 뒤, &lt;code&gt;선형적&lt;/code&gt;으로 증가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;타임아웃&lt;/code&gt; 또는 &lt;code&gt;3개의 중복 ACK&lt;/code&gt; 발생시 손실 인식 : &lt;code&gt;TCP Tahoe&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;인식시 &lt;code&gt;cwnd&lt;/code&gt;를 1로 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;요약-1&#34; &gt;요약
&lt;span&gt;
    &lt;a href=&#34;#%ec%9a%94%ec%95%bd-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;congestion-control-summary.png&#34; alt=&#34;congestion-control-summary.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;가 임계값보다 낮을때, 발신자는 &lt;code&gt;Slow Start 단계&lt;/code&gt;로, 윈도우가 기하급수적으로 증가&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;가 임계값 이상이면, 발신자는 &lt;code&gt;혼잡 회피 단계&lt;/code&gt;로, 윈도우는 선형적으로 증가&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3개의 중복 ACK&lt;/code&gt; 발생시, 임계값은 &lt;code&gt;cwnd/2&lt;/code&gt;로 설정되고, &lt;code&gt;cwnd&lt;/code&gt;는 임계값으로 설정됨&lt;/li&gt;
&lt;li&gt;&lt;code&gt;타임아웃&lt;/code&gt; 발생시, 임계값은 &lt;code&gt;cwnd/2&lt;/code&gt;로 설정되고, &lt;code&gt;cwnd&lt;/code&gt;는 &lt;code&gt;1 MSS&lt;/code&gt;로 설정됨&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tcp-세그먼트-구조&#34; &gt;TCP 세그먼트 구조
&lt;span&gt;
    &lt;a href=&#34;#tcp-%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8-%ea%b5%ac%ec%a1%b0&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;TCP-Segment.png&#34; alt=&#34;TCP-Segment.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP 세그먼트&lt;/code&gt;는 다음으로 이뤄져있음
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;송신 포트&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;수신 포트&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;순서 번호&lt;/code&gt; (Sequence Number, 현재 세그먼트의 가장 앞 바이트 번호)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ACK 번호&lt;/code&gt; (마지막으로 수신한 데이터 바이트 다음의 번호)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;헤더 길이&lt;/code&gt;(4 bits)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;예약된 공간&lt;/code&gt;(6 bits)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TCP 제어 플래그&lt;/code&gt; &lt;a href=&#34;http://www.ktword.co.kr/test/view/view.php?no=2437&#34;&gt;참고 - TCP 제어 플래그&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;URG&lt;/code&gt; : &lt;code&gt;Urgent Pointer&lt;/code&gt;필드에 값이 채워져있음을 알림&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ACK&lt;/code&gt;: &lt;code&gt;ACK 번호&lt;/code&gt; 필드에 값이 세팅되어있음을 알림
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SYN 세그먼트&lt;/code&gt; 전송 이후 모든 세그먼트에 항상 이 비트가 1로 설정됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PSH&lt;/code&gt;: &lt;code&gt;Push the Data&lt;/code&gt;, &lt;code&gt;버퍼링된 데이터&lt;/code&gt;를 가능한 &lt;code&gt;빨리&lt;/code&gt; 상위 계층 &lt;code&gt;응용프로그램에 전달할 것&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;수신 측은 버퍼가 차기를 기다리지 않고 버퍼링된 데이터들 응용프로그램에전달&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PST&lt;/code&gt;: &lt;code&gt;연결확립(ESTABLISHED)&lt;/code&gt;된 회선에 &lt;code&gt;강제 리셋 요청&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt;,&lt;code&gt;SYN_RCVD&lt;/code&gt; 상태라면 &lt;code&gt;LISTEN&lt;/code&gt; 상태로, 그외의 경우 연결 끊고 &lt;code&gt;CLOSED&lt;/code&gt; 상태로&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SYN&lt;/code&gt;: 연결설정을 위해 &lt;code&gt;순서 번호&lt;/code&gt;를 동기화
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SYN=1, ACK=0&lt;/code&gt; -&amp;gt; SYN 세그먼트(&lt;code&gt;연결 요청&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SYN=1, ACK=1&lt;/code&gt; -&amp;gt; SYN+ACK 세그먼트(&lt;code&gt;연결 허락&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ACK=1&lt;/code&gt; -&amp;gt; ACK 세그먼트(&lt;code&gt;연결 설정&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIN&lt;/code&gt;: 연결 종료
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FIN=1&lt;/code&gt; -&amp;gt; FIN 세그먼트 (&lt;code&gt;종결 요청&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FIN=1, ACK=1&lt;/code&gt; -&amp;gt; FIN+ACK 세그먼트 (&lt;code&gt;종결 응답&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;윈도우&lt;/code&gt; (수신자가 수락할 의향이 있는 바이트 수)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;체크섬&lt;/code&gt; (헤더+텍스트를 16비트 word들로 분할해, 이를 16비트 1의 보수합으로 누계한 다음, 최종 결과 값의 1의 보수를 구한 것)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;긴급 포인터(Urgent Pointer)&lt;/code&gt;(긴급 포인터의 현재 값을 &lt;code&gt;순서 번호&lt;/code&gt;의 &lt;code&gt;오프셋&lt;/code&gt;으로 전달하는 값. 긴급 포인터는 긴급 데이터 &lt;code&gt;다음 바이트의 순서 번호&lt;/code&gt;를 가리킴)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;옵션&lt;/code&gt; (MSS 옵션 협상, 윈도우 크기 확장, 선택확인응답(SACK) 등의 옵션 데이터를 포함할 수 있음)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;udp&#34; &gt;UDP
&lt;span&gt;
    &lt;a href=&#34;#udp&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h3&gt;&lt;h4 id=&#34;요약-2&#34; &gt;요약
&lt;span&gt;
    &lt;a href=&#34;#%ec%9a%94%ec%95%bd-2&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;신뢰할 수 없음&lt;/strong&gt;(&lt;code&gt;unreliable&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;순서 지키지 않음&lt;/strong&gt;(&lt;code&gt;unordered&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;어떤것도 보장하지 않는(&lt;code&gt;best-effort&lt;/code&gt;) IP의 기본적인(&lt;code&gt;bare bones&lt;/code&gt;) 확장&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;즉, 어떠한 기능도 지원하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;지연 보장&lt;/code&gt;, &lt;code&gt;대역폭 보장&lt;/code&gt;과 같은 서비스 &lt;code&gt;지원되지 않음&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;모든 데이터들이 동급&lt;/code&gt;이라는 전제가 있어, &amp;lsquo;어떤 파일을 빨리 보내야 한다&amp;rsquo; 이런 개념이 존재하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;주요-특징-1&#34; &gt;주요 특징
&lt;span&gt;
    &lt;a href=&#34;#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;h5 id=&#34;best-effort한-서비스-제공&#34; &gt;&amp;ldquo;best effort&amp;quot;한 서비스 제공
&lt;span&gt;
    &lt;a href=&#34;#best-effort%ed%95%9c-%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%a0%9c%ea%b3%b5&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;p&gt;따라서 &lt;code&gt;UDP Segment&lt;/code&gt;는&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;손실 가능&lt;/code&gt;(송신자는 전송 이후 신경쓰지 않음)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;비순차적&lt;/code&gt;으로 전달됨&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;connectionless&#34; &gt;&lt;code&gt;connectionless&lt;/code&gt;
&lt;span&gt;
    &lt;a href=&#34;#connectionless&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;UDP 송신자-수신자 간 &lt;code&gt;핸드셰이킹&lt;/code&gt; 없음&lt;/li&gt;
&lt;li&gt;각 &lt;code&gt;UDP Segment&lt;/code&gt;는 다른 &lt;code&gt;Segmeent&lt;/code&gt;들과는 독립적으로 처리됨&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;신뢰성-없음&#34; &gt;신뢰성 없음
&lt;span&gt;
    &lt;a href=&#34;#%ec%8b%a0%eb%a2%b0%ec%84%b1-%ec%97%86%ec%9d%8c&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;따라서 UDP 상에서 신뢰성 있는 전송이 필요하다면, &lt;code&gt;응용 계층&lt;/code&gt;에서 이를 &lt;code&gt;구현&lt;/code&gt;해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;장점&#34; &gt;장점
&lt;span&gt;
    &lt;a href=&#34;#%ec%9e%a5%ec%a0%90&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;연결 조율 과정이 없음&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;따라서 이로인한 &lt;code&gt;딜레이 X&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;단순함&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;송-수신자 간 연결 상태가 존재하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;작은 헤더 사이즈&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;혼잡 제어 없음&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;원하는 만큼 빠르게 전송할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;udp-세그먼트-구조&#34; &gt;UDP 세그먼트 구조
&lt;span&gt;
    &lt;a href=&#34;#udp-%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8-%ea%b5%ac%ec%a1%b0&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;UDP-Segment.png&#34; alt=&#34;UDP-Segment.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;UDP 헤더&lt;/code&gt;는 &lt;code&gt;출발 포트&lt;/code&gt;, &lt;code&gt;도착 포트&lt;/code&gt;, &lt;code&gt;길이&lt;/code&gt;(헤더와 세그먼트를 포함한), &lt;code&gt;체크섬&lt;/code&gt;으로 이뤄짐&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;udp-체크섬&#34; &gt;UDP 체크섬
&lt;span&gt;
    &lt;a href=&#34;#udp-%ec%b2%b4%ed%81%ac%ec%84%ac&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;전송된 세그먼트에서 &lt;code&gt;에러&lt;/code&gt;(ex. &lt;code&gt;반전된 비트(flipped bits)&lt;/code&gt;)를 감지하기 위해 사용되는 데이터 블록&lt;/li&gt;
&lt;li&gt;&lt;code&gt;송신자&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;헤더 필드를 포함한&lt;/em&gt; &lt;code&gt;세그먼트 내용&lt;/code&gt;을 &lt;code&gt;16 bit 정수 시퀀스&lt;/code&gt;로 처리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;체크섬&lt;/code&gt;: &lt;code&gt;세그먼트 내용&lt;/code&gt;의 &lt;code&gt;1의 보수(모든 비트를 반전시킨 값)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;송신자는 체크섬 값을 &lt;code&gt;UDP 체크섬 필드&lt;/code&gt;로 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;수신자&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;수신한 세그먼트의 &lt;code&gt;체크섬을 계산&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;만약 &lt;code&gt;계산한 값&lt;/code&gt;이 &lt;code&gt;체크섬 필드의 값&lt;/code&gt;과
&lt;ul&gt;
&lt;li&gt;같다면, 에러가 검출되지 않은 것&lt;/li&gt;
&lt;li&gt;다르면, 에러가 검출된 것&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;사용처&#34; &gt;사용처
&lt;span&gt;
    &lt;a href=&#34;#%ec%82%ac%ec%9a%a9%ec%b2%98&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h4&gt;&lt;p&gt;&lt;code&gt;UDP&lt;/code&gt;는 위와 같은 특징 때문에 주로 다음의 용도로 사용됨&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;멀티미디어 스트리밍 애플리케이션&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;손실을 허용하고, 속도에 민감함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SNMP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;checksum이란&#34; &gt;Checksum이란?
&lt;span&gt;
    &lt;a href=&#34;#checksum%ec%9d%b4%eb%9e%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;체크섬&lt;/code&gt;?
&lt;ul&gt;
&lt;li&gt;전송된 세그먼트에서 &lt;code&gt;에러&lt;/code&gt;(ex. &lt;code&gt;반전된 비트(flipped bits)&lt;/code&gt;)를 &lt;strong&gt;&lt;code&gt;감지&lt;/code&gt;&lt;/strong&gt; 하기 위해 사용되는 데이터 블록
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;헤더 필드를 포함한&lt;/em&gt; &lt;code&gt;세그먼트 내용&lt;/code&gt;을 &lt;code&gt;16 bit 정수 시퀀스&lt;/code&gt;로 분해한 뒤, 1의 보수로 합을 누적하여 구함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcp와-udp-중-어느-프로토콜이-checksum을-수행하는가&#34; &gt;TCP와 UDP 중 어느 프로토콜이 Checksum을 수행하는가?
&lt;span&gt;
    &lt;a href=&#34;#tcp%ec%99%80-udp-%ec%a4%91-%ec%96%b4%eb%8a%90-%ed%94%84%eb%a1%9c%ed%86%a0%ec%bd%9c%ec%9d%b4-checksum%ec%9d%84-%ec%88%98%ed%96%89%ed%95%98%eb%8a%94%ea%b0%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt;, &lt;code&gt;UDP&lt;/code&gt; 모두 Checksum을 수행할 수 있다
&lt;ul&gt;
&lt;li&gt;다만, &lt;code&gt;UDP&lt;/code&gt;의 경우 &lt;em&gt;IPv4에서는 선택적&lt;/em&gt;이고 &lt;code&gt;IPv6&lt;/code&gt;에서는 &lt;code&gt;필수&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;checksum을-통해-오류를-정정할-수-있는가&#34; &gt;Checksum을 통해 오류를 정정할 수 있는가?
&lt;span&gt;
    &lt;a href=&#34;#checksum%ec%9d%84-%ed%86%b5%ed%95%b4-%ec%98%a4%eb%a5%98%eb%a5%bc-%ec%a0%95%ec%a0%95%ed%95%a0-%ec%88%98-%ec%9e%88%eb%8a%94%ea%b0%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;checksum을 이용한 &lt;code&gt;오류 정정&lt;/code&gt;은 &lt;strong&gt;불가능&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;단순히 &lt;code&gt;각 16비트 word들의 1의 보수 합&lt;/code&gt;이기 때문에 원래 값이 무엇이었는지 유추하기 힘듦&lt;/li&gt;
&lt;li&gt;따라서 &lt;code&gt;자동반복요청(ARQ)&lt;/code&gt; 기법을 사용하거나, &lt;code&gt;Hamming Code&lt;/code&gt;, &lt;code&gt;Reed–Solomon code&lt;/code&gt;등 &lt;code&gt;오류 정정 코드&lt;/code&gt;를 사용하는 &lt;code&gt;전진오류수정(FEC)&lt;/code&gt; 기법을 사용해 오류를 정정해야 함
&lt;ul&gt;
&lt;li&gt;이러한 기법들은 &lt;code&gt;데이터링크 계층&lt;/code&gt;에서 수행됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcp가-신뢰성을-보장하는-방법&#34; &gt;TCP가 신뢰성을 보장하는 방법
&lt;span&gt;
    &lt;a href=&#34;#tcp%ea%b0%80-%ec%8b%a0%eb%a2%b0%ec%84%b1%ec%9d%84-%eb%b3%b4%ec%9e%a5%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt;에서는 신뢰성을 보장하기 위해 다음과 같은 서비스 제공
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;파이프라인화된 세그먼트&lt;/code&gt; (연속으로 전송할 수 있음)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;누적 ACK&lt;/code&gt; (Go-Back-N과 유사)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;단일 재전송 타이머&lt;/code&gt; (데이터 보낸 시간 != timeout 시간 일 수 있어 타이머 사용)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;위 서비스를 통해 &lt;code&gt;비트 에러&lt;/code&gt;, &lt;code&gt;패킷 손실&lt;/code&gt;이 일어난 데이터를 감지하고 재전송을 요청함.&lt;/li&gt;
&lt;li&gt;이때, &lt;code&gt;재전송&lt;/code&gt;은 다음 두 경우 발생
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;timeout 이벤트&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;timeout이 발생한 경우, 이를 일으킨 세그먼트를 재전송&lt;/li&gt;
&lt;li&gt;타이머 재시작&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;중복된 ACK&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;이전에 ACK되지 않은 세그먼트를 ACK하는 경우&lt;/li&gt;
&lt;li&gt;무엇이 ACK되었다고 알려져있는지 갱신&lt;/li&gt;
&lt;li&gt;ACK되지 않은 세그먼트 아직 있으면 타이머 시작&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcp의-혼잡-제어-처리-방법&#34; &gt;TCP의 혼잡 제어 처리 방법
&lt;span&gt;
    &lt;a href=&#34;#tcp%ec%9d%98-%ed%98%bc%ec%9e%a1-%ec%a0%9c%ec%96%b4-%ec%b2%98%eb%a6%ac-%eb%b0%a9%eb%b2%95&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TCP에서는 &lt;code&gt;혼잡 제어&lt;/code&gt;를 위해
&lt;code&gt;AIMD&lt;/code&gt;, &lt;code&gt;slow start&lt;/code&gt;, &lt;code&gt;conservative after timeout events&lt;/code&gt; 3가지 메커니즘 존재
&lt;ul&gt;
&lt;li&gt;발신자가 혼잡함을 인식하는 기준
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;손실 이벤트(loss event)&lt;/code&gt;: &lt;code&gt;타임아웃&lt;/code&gt; 또는 &lt;code&gt;3번&lt;/code&gt;의 &lt;code&gt;중복된 ACK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TCP 발신자는 &lt;code&gt;손실 이벤트&lt;/code&gt; 발생시, 혼잡에 대응하기 위해 &lt;code&gt;혼잡 윈도우(Congestion Window, CongWin)&lt;/code&gt;의 크기를 조절해 대응&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;aimd-1&#34; &gt;AIMD
&lt;span&gt;
    &lt;a href=&#34;#aimd-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;AIMD.png&#34; alt=&#34;AIMD.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Additive Increase Multiplicative Decrease&lt;/code&gt;의 약어&lt;/li&gt;
&lt;li&gt;&lt;code&gt;혼잡 윈도우&lt;/code&gt;를 &lt;em&gt;혼잡이 감지되지 않을때&lt;/em&gt;는 &lt;code&gt;선형적으로 증가&lt;/code&gt;시키다, &lt;em&gt;혼잡이 감지되면&lt;/em&gt; &lt;code&gt;기하급수적으로 감소&lt;/code&gt;시키는 방식
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;손실이 감지될 때까지&lt;/em&gt;, 매 &lt;code&gt;RTT&lt;/code&gt;마다 &lt;code&gt;cwnd&lt;/code&gt;를 1 MSS씩 증가&lt;/li&gt;
&lt;li&gt;&lt;em&gt;손실이 발생하면&lt;/em&gt;, &lt;code&gt;cwnd&lt;/code&gt;를 절반으로 줄임&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;즉, &lt;code&gt;cwnd&lt;/code&gt;는 인식된 네트워크 혼잡 정도를 나타내는 함수라고 할 수 있음&lt;/li&gt;
&lt;li&gt;TCP 전송 속도 $rate \approx {cwnd \over RTT} bytes/sec$&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;slow-start-1&#34; &gt;Slow Start
&lt;span&gt;
    &lt;a href=&#34;#slow-start-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;p&gt;&lt;img src=&#34;Slow-Start.png&#34; alt=&#34;Slow-Start.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;연결 시작 이후, &lt;code&gt;손실 이벤트&lt;/code&gt; 발생 전까지 속도를 기하급수적으로 증가시키는 방식
&lt;ul&gt;
&lt;li&gt;초기 &lt;code&gt;cwnd&lt;/code&gt; = 1 MSS&lt;/li&gt;
&lt;li&gt;매 RTT마다 &lt;code&gt;cwnd&lt;/code&gt;는 2배씩 증가
&lt;ul&gt;
&lt;li&gt;정확히는 모든 &lt;code&gt;ACK 수신&lt;/code&gt;마다 &lt;code&gt;cwnd&lt;/code&gt;를 2배로 증가시킴&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;시작 값이 1이라 &lt;code&gt;Slow Start&lt;/code&gt;라는 이름이 붙었으며, 증가 속도는 빠름&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;conservative-after-timeout-events타임아웃-발생-후-보수적으로-1&#34; &gt;Conservative after timeout events(타임아웃 발생 후 보수적으로)
&lt;span&gt;
    &lt;a href=&#34;#conservative-after-timeout-events%ed%83%80%ec%9e%84%ec%95%84%ec%9b%83-%eb%b0%9c%ec%83%9d-%ed%9b%84-%eb%b3%b4%ec%88%98%ec%a0%81%ec%9c%bc%eb%a1%9c-1&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;타임아웃&lt;/code&gt;으로 손실을 인식
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;는 1로 세팅됨&lt;/li&gt;
&lt;li&gt;이후 &lt;code&gt;cwnd&lt;/code&gt;가 기하급수적으로 &lt;code&gt;임계값(threshold)&lt;/code&gt;까지 증가한 뒤, &lt;code&gt;선형적&lt;/code&gt;으로 증가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3개의 중복 ACK&lt;/code&gt;로 손실을 인식 : &lt;code&gt;TCP RENO&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;중복 ACK&lt;/code&gt;는 네트워크가 아직 &lt;code&gt;세그먼트들을 전달할 수 있음&lt;/code&gt;을 나타냄&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cwnd&lt;/code&gt;를 &lt;code&gt;절반&lt;/code&gt;으로 줄인 뒤, &lt;code&gt;선형적&lt;/code&gt;으로 증가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;타임아웃&lt;/code&gt; 또는 &lt;code&gt;3개의 중복 ACK&lt;/code&gt; 발생시 손실 인식 : &lt;code&gt;TCP Tahoe&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;인식시 &lt;code&gt;cwnd&lt;/code&gt;를 1로 설정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;왜-http는-tcp를-사용하는가&#34; &gt;왜 HTTP는 TCP를 사용하는가?
&lt;span&gt;
    &lt;a href=&#34;#%ec%99%9c-http%eb%8a%94-tcp%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94%ea%b0%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt;가 &lt;strong&gt;&lt;code&gt;신뢰성&lt;/code&gt;&lt;/strong&gt; 을 제공하기 때문
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTTP&lt;/code&gt;는 &lt;code&gt;신뢰할 수 있는 전송(reliable transport)&lt;/code&gt;을 전제로하는 프로토콜임&lt;/li&gt;
&lt;li&gt;따라서 이를 기본적으로 제공하는 &lt;code&gt;TCP&lt;/code&gt;를 선택
&lt;ul&gt;
&lt;li&gt;만약 &lt;code&gt;신뢰성&lt;/code&gt;이 제공되지 않아 패킷들의 순서가 뒤죽박죽이 되거나, 누락될 경우 웹사이트를 이루는 요소들이 올바르게 배치되지 않거나 텍스트, 이미지 등의 정보가 누락될 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;왜-http3-에서는-udp를-사용하는가&#34; &gt;왜 HTTP/3 에서는 UDP를 사용하는가?
&lt;span&gt;
    &lt;a href=&#34;#%ec%99%9c-http3-%ec%97%90%ec%84%9c%eb%8a%94-udp%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94%ea%b0%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTTP/3&lt;/code&gt;는 &lt;code&gt;TCP의 고질적인 문제점&lt;/code&gt;을 해결하고자 &lt;code&gt;UDP&lt;/code&gt;를 채용
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt;로 인해 발생하는 문제
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HOL Blocking&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;TCP의 신뢰성때문에, 한 스트림에서 데이터 손실 발생시, 다른 데이터 스트림들은 손실된 데이터 재전송될 때까지 차단됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;연결 설정&lt;/code&gt;으로 인한 &lt;code&gt;지연&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;TCP가 연결 설정할 때 거치는 &lt;code&gt;3-way handshake&lt;/code&gt; 과정과 보안을 위한 &lt;code&gt;TLS Handshake&lt;/code&gt; 때문에 두 번의 지연 발생
&lt;ul&gt;
&lt;li&gt;반면 UDP(정확히는 &lt;code&gt;QUIC&lt;/code&gt;)는 최초 연결 설정시 &lt;code&gt;연결에 필요한 정보&lt;/code&gt; + &lt;code&gt;데이터&lt;/code&gt;를 함께 전송해 1-RTT로 지연을 줄임&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;패킷 &lt;code&gt;암호화 불가능&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP 프로토콜 헤더&lt;/code&gt;는 암호화 및 인증되지 않아, 중개자에 의한 변조/인젝션/도청에 취약
&lt;ul&gt;
&lt;li&gt;반면 &lt;code&gt;QUIC&lt;/code&gt;은 &lt;em&gt;일부 메시지를 제외한&lt;/em&gt; &lt;code&gt;모든 패킷 헤더&lt;/code&gt;와 &lt;code&gt;메시지 본문&lt;/code&gt;이 암호화 됨&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;연결 요소 변경시 연결 재설정
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TCP&lt;/code&gt; 연결은 &lt;code&gt;출발지 IP&lt;/code&gt;, &lt;code&gt;출발지 포트&lt;/code&gt;, &lt;code&gt;도착지 IP&lt;/code&gt;, &lt;code&gt;도착지 포트&lt;/code&gt; 4가지를 기반
&lt;ul&gt;
&lt;li&gt;하나라도 변경될 경우 연결 다시 설정해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;반면 &lt;code&gt;QUIC&lt;/code&gt;은 &lt;code&gt;연결 ID&lt;/code&gt;를 기반으로해, 이 값이 변경되지 않는 이상 연결 계속 유지&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;브라우저는-어떤-서버가-tcp를-쓰는지-udp를-쓰는지-어떻게-알-수-있는가&#34; &gt;브라우저는 어떤 서버가 TCP를 쓰는지 UDP를 쓰는지 어떻게 알 수 있는가?
&lt;span&gt;
    &lt;a href=&#34;#%eb%b8%8c%eb%9d%bc%ec%9a%b0%ec%a0%80%eb%8a%94-%ec%96%b4%eb%96%a4-%ec%84%9c%eb%b2%84%ea%b0%80-tcp%eb%a5%bc-%ec%93%b0%eb%8a%94%ec%a7%80-udp%eb%a5%bc-%ec%93%b0%eb%8a%94%ec%a7%80-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%95%8c-%ec%88%98-%ec%9e%88%eb%8a%94%ea%b0%80&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;연결 시도 과정&lt;/code&gt;에서 알 수 있음
&lt;ul&gt;
&lt;li&gt;먼저 브라우저는 &lt;code&gt;TCP&lt;/code&gt;로 &lt;code&gt;443&lt;/code&gt;번(&lt;code&gt;HTTPS&lt;/code&gt;), 또는 &lt;code&gt;80&lt;/code&gt;번(&lt;code&gt;HTTP&lt;/code&gt;) 포트로 연결 시도
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HTTP/1.1&lt;/code&gt; 또는 &lt;code&gt;HTTP/2&lt;/code&gt;로 연결을 설정하기 위함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;만약 서버가 &lt;code&gt;HTTP/3&lt;/code&gt;를 지원하는 경우, &lt;code&gt;h3&lt;/code&gt; ALPN 토큰을 사용해 &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Alt-Svc#example&#34;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt; HTTP 응답 헤더 필드&lt;/a&gt;를 사용하거나, &lt;code&gt;HTTP/2 ALTSVC 프레임&lt;/code&gt;을 통해 동등한 &lt;code&gt;HTTP/3&lt;/code&gt; 엔드포인트를 지원함을 알림
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt-Svc&lt;/code&gt; : 향후 요청에 대해 &lt;code&gt;다른 네트워크 위치(대체 서비스)&lt;/code&gt;역시 현재 요청의 오리진처럼 정당한 응답을 받을 수 있음을 알림.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-Svc&lt;/code&gt; 필드의 값을 활용해 &lt;code&gt;h3&lt;/code&gt; 키에 해당하는 값의 UDP 포트로 연결 시도
&lt;ul&gt;
&lt;li&gt;만약 &lt;code&gt;h3=&amp;quot;:443&amp;quot;&lt;/code&gt;인 경우, UDP 443 포트로 &lt;code&gt;QUIC&lt;/code&gt; 연결 시도&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;참고&#34; &gt;참고
&lt;span&gt;
    &lt;a href=&#34;#%ec%b0%b8%ea%b3%a0&#34;&gt;
        &lt;svg viewBox=&#34;0 0 28 23&#34; height=&#34;100%&#34; width=&#34;19&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-miterlimit=&#34;10&#34; stroke-width=&#34;2&#34;/&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/span&gt;
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;전공 강의 자료
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Computer Networking: A Top Down Approach - 7th Edition&amp;rdquo;, Jim Kurose, Keith RossPearson. April 2016&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ocw.snu.ac.kr/sites/default/files/NOTE/W6.Transport_Layer.pdf&#34;&gt;W6.Transport_Layer.pdf - SNU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ietf.org/rfc/rfc793.txt&#34;&gt;TRANSMISSION CONTROL PROTOCOL - ietf.org/rfc/rfc793.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc9293#name-header-format&#34;&gt;RFC 9293 - Transmission Control Protocol (TCP)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coursys.sfu.ca/2022fa-cmpt-471-d1/pages/Prj2/view&#34;&gt;Reliable Data Transfer over UDP - Simon Fraser University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7838&#34;&gt;RFC 7838 - HTTP Alternative Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ktword.co.kr/test/view/view.php?no=2437&#34;&gt;TCP 제어 플래그 - ktworld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ktword.co.kr/test/view/view.php?no=1889&#34;&gt;TCP Header- ktworld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ktword.co.kr/test/view/view.php?no=5536&#34;&gt;TCP 혼잡제어 - ktworld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://os.korea.ac.kr/wp-content/uploads/2020/11/10_TCP-in-Linux.pdf&#34;&gt;Fall ’20 COSE322-00  System Programming  TCP in Linux - korea univ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slashroot.in/how-is-tcp-and-udp-checksum-calculated&#34;&gt;How is TCP &amp;amp; UDP Checksum Calculated?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tcpipguide.com/free/t_TCPChecksumCalculationandtheTCPPseudoHeader-2.htm&#34;&gt;The TCP/IP Guide - TCP Checksum Calculation and the TCP &amp;ldquo;Pseudo Header&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
